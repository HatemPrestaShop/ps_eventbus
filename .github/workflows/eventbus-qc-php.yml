name: Quality Control

on:
  pull_request:
    types: [opened, edited, reopened, synchronize]
  push:
    branches:
      - "main"

jobs:
  php-linter:
    name: PHP Syntax check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php_version: ["7.1", "7.2", "7.3", "7.4", "8.0", "8.1"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: PHP syntax checker ${{ matrix.php_version }}
        uses: "jokesterfr/github-action-php-lint@fea/add-action-router"
        with:
          php-version: ${{ matrix.php_version }}

  php-cs-fixer:
    name: PHP-CS-FIXER
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: Run PHP-CS-Fixer
        uses: prestashopcorp/github-action-php-cs-fixer@master

  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        presta_version: ["1.7.0.3", "1.7.8.7"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: Cache vendor folder
        uses: actions/cache@v1
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}
      - name: Cache composer folder
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: php-composer-cache
      - name: Install dependencies
        run: composer install
      - name: Select .neon file compatible with PrestaShop ${{ matrix.presta_version }}
        id: neon
        run: |
          PS_VERSION="${{ matrix.presta_version }}"
          echo ::set-output name=filename::phpstan-PS-1.7.neon
      - name: PHPStan PrestaShop ${{ matrix.presta_version }}
        run: |
          PS_VERSION="${{ matrix.presta_version }}" \
          NEON_FILE=${{steps.neon.outputs.filename}} \
          make phpstan

  unit-system-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        presta_version: ["177"]
    steps:
      - name: Setup PHP with Xdebug
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.1"
          coverage: xdebug
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: Cache vendor folder
        uses: actions/cache@v1
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}
      - name: Cache composer folder
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: php-composer-cache
      - run: composer install
      - run: npm i
      - run: make ata${{ matrix.presta_version }}
      - name: üìä Step 5 - Collect Allure files and generate allure-report folder
        run: |
          make allure-report
      - name: üéÅ Step 6 - Publishing Allure artifact to GitHub Actions
        uses: actions/upload-artifact@v2
        with:
          name: allure-report
          path: allure-report
      - name: üéÅ Step 7 - Publishing Code coverage report to GitHub Actions
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: tests/tmp/code-coverage-report
